generated_at,file_path,entity_name,entity_type,signature,line_no,return_type,imports,component_usages
2025-04-11 06:01:58,SUMMARY,,summary,,,,,"files:0,models:0,components:31,hooks:2,functions:149,enums:0"
2025-04-11 06:01:58,src/actions/work-order-actions.ts,updateWorkOrderStatus,FUNCTION,"export async function updateWorkOrderStatus(
  id: string,
  status: WorkOrderStatus
)",8,,,
2025-04-11 06:01:58,src/app/layout.tsx,RootLayout,COMPONENT,export default async function RootLayout(,14,,,
2025-04-11 06:01:58,src/app/page.tsx,Home,COMPONENT,export default function Home(),4,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/layout.tsx,TenantLayout,COMPONENT,export default async function TenantLayout(,7,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,fetchInitialData,FUNCTION,export async function fetchInitialData(subdomain: string): Promise<TenantWithRelations>,22,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,endCall,FUNCTION,export async function endCall(callId: string),54,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,createWorkOrder,FUNCTION,"export async function createWorkOrder(
  assets: Asset[],
  description: string,
  priority: 'LOW' | 'MEDIUM' | 'HIGH' | 'CRITICAL' = 'MEDIUM',
  tenantvar: Tenant
)",81,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,addWorkOrderNote,FUNCTION,"export async function addWorkOrderNote(workOrderId: string, note: string, userId?: string)",111,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,createCall,FUNCTION,"export async function createCall(
  assetId: string,
  description: string,
  priority: CallPriority,
  reportedById: string | undefined,
  tenantId: string
)",132,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,createAsset,FUNCTION,export async function createAsset(,162,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,createPart,FUNCTION,export async function createPart(,192,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,arrow_function,FUNCTION,connect: vendorIds.map(vendorId => (,229,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,updateWorkOrder,FUNCTION,"export async function updateWorkOrder(workOrderId: string, tenantId: string, order: Partial<WorkOrder>)",242,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,arrow_function,FUNCTION,"workOrder.assets.map(asset =>
          prisma.asset.update(",252,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/actions.ts,scheduleMaintenance,FUNCTION,export async function scheduleMaintenance(,267,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,DashboardProps,INTERFACE,interface DashboardProps,23,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,const fetcher = (url: string) => fetch(url).then(res =>,27,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,Dashboard,COMPONENT,export default function Dashboard(,32,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"onErrorRetry: (error, key, config, revalidate,",50,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,setTimeout(() => revalidate(,52,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,useEffect(() =>,58,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,useEffect(() =>,67,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,const connectSSE = () =>,71,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,eventSource.onmessage = (event) =>,75,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,setData(prev =>,84,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,eventSource.onerror = () =>,96,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,return () => eventSource?.close();,107,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"debounce((value: string) => setSearch(value), 300),",112,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,useEffect(() =>,117,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"const mergeUpdates = (existing: any[], updates: any[]) =>",125,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"updates.forEach(update => map.set(update.id, update));",127,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,const refreshData = async () =>,132,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,const handleEndCall = async (callId: string) =>,142,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,setData(prev => (prev ?,146,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"incidents: prev.incidents.map(incident =>
          incident.id === callId ?",148,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"const handleWorkOrderSubmit = async (formData: Record<string, any>) =>",159,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"const handleCreateCall = async (formData: Record<string, any>) =>",176,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"const handleAddNote = async (workOrderId: string, note: string) =>",194,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"const handleCreateAsset = async (formData: Record<string, any>) =>",204,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"const handleCreatePart = async (formData: Record<string, any>) =>",219,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"(asset) =>
      asset?.name?.toLowerCase().includes(search.toLowerCase()) ||
      asset?.location?.toLowerCase().includes(search.toLowerCase())",240,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,"(incident) =>
      incident.description?.toLowerCase().includes(search.toLowerCase()) ||
      data?.assets?.find((asset) => asset.id === incident.assetId)?.name
        ?.toLowerCase()
        .incl",246,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,calls=,307,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/client.tsx,arrow_function,FUNCTION,<LowStockItems parts=,325,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/loading.tsx,DashboardLoading,COMPONENT,export default function DashboardLoading(),2,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/page.tsx,DashboardPage,COMPONENT,export default async function DashboardPage(,8,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/AssetStatus.tsx,AssetStatusProps,INTERFACE,interface AssetStatusProps,8,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/AssetStatus.tsx,AssetStatusComp,COMPONENT,export default function AssetStatusComp(,13,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/AssetStatus.tsx,arrow_function,FUNCTION,"const downAssets = calls.filter(call => 
    call.status !== CallStatus.CLOSED && 
    assets.some(asset => asset.id === call.assetId)",15,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/AssetStatus.tsx,arrow_function,FUNCTION,assets.some(asset => asset.id === call.assetId),17,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/DashboardHeader.tsx,DashboardHeader,COMPONENT,export default function DashboardHeader(,7,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/DashboardHeader.tsx,DashboardHeaderProps,INTERFACE,interface DashboardHeaderProps,74,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/FloatingActionButton.tsx,FloatingActionButtonProps,INTERFACE,interface FloatingActionButtonProps,13,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/FloatingActionButton.tsx,FloatingActionButton,COMPONENT,export default function FloatingActionButton(,19,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/FloatingActionButton.tsx,arrow_function,FUNCTION,options: assets.map(asset => (,30,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/FloatingActionButton.tsx,arrow_function,FUNCTION,options: Object.values(CallPriority).map(value => (,41,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/FloatingActionButton.tsx,arrow_function,FUNCTION,options: assets.map(asset => (,54,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/FloatingActionButton.tsx,arrow_function,FUNCTION,onClick=,85,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/LowStockItems.tsx,LowStockProps,INTERFACE,interface LowStockProps,7,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/LowStockItems.tsx,LowStockItems,COMPONENT,export default function LowStockItems(,11,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/LowStockItems.tsx,arrow_function,FUNCTION,const lowStock = parts.filter((part) => part.quantity <= part.minStock);,14,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/LowStockItems.tsx,arrow_function,FUNCTION,,25,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,MaintProps,INTERFACE,interface MaintProps,9,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,MaintenanceCalls,COMPONENT,export default function MaintenanceCalls(,17,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,arrow_function,FUNCTION,,33,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,arrow_function,FUNCTION,".map((call) => (
              <div key=",41,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,arrow_function,FUNCTION,,46,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,arrow_function,FUNCTION,,48,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,arrow_function,FUNCTION,onClick=,67,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/MaintenanceCalls.tsx,arrow_function,FUNCTION,onClick=,77,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,QuickActionsProps,INTERFACE,interface QuickActionsProps,11,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,QuickActions,COMPONENT,export default function QuickActions(,19,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,options: assets.map(asset => (,38,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,options: Object.values(CallPriority).map(value => (,49,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,options: assets.map(asset => (,67,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,options: vendors.map(vendor => (,86,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,onClick=,107,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,onClick=,115,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,onClick=,123,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/QuickActions.tsx,arrow_function,FUNCTION,onClick=,131,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,RecentWorkOrdersProps,INTERFACE,interface RecentWorkOrdersProps,55,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,RecentWorkOrders,COMPONENT,export default function RecentWorkOrders(,61,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,const toggleExpand = (orderId: string) =>,71,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,const handleAddNote = async (workOrderId: string) =>,77,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,,111,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,onClick=,137,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,onCancel=,158,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,onSave=,159,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,onClick=,195,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,onChange=,207,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,onClick=,213,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,WorkOrderEditForm,COMPONENT,function WorkOrderEditForm(,235,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,const onSubmit = async (data: any) =>,255,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,,300,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/RecentWorkOrders.tsx,arrow_function,FUNCTION,,314,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/SearchAndFilters.tsx,SearchProps,INTERFACE,interface SearchProps,8,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/SearchAndFilters.tsx,SearchAndFilters,COMPONENT,export default function SearchAndFilters(,16,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/SearchAndFilters.tsx,arrow_function,FUNCTION,onChange=,31,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/SignOutButton.tsx,SignOutButton,COMPONENT,export default function SignOutButton(),5,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/SignOutButton.tsx,arrow_function,FUNCTION,onClick=,8,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/StatsCards.tsx,StatsCards,COMPONENT,export default function StatsCards(,6,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/StatsCards.tsx,arrow_function,FUNCTION,calls = calls.filter((call) => call.status !== CallStatus.CLOSED);,7,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/StatsCards.tsx,arrow_function,FUNCTION,const downedAssets = assets.filter(a => calls.filter(c => c.assetId == a.id).length > 0).length;,8,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/StatsCards.tsx,arrow_function,FUNCTION,,19,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/@dashboard/components/StatsCards.tsx,StatsCardsProps,INTERFACE,interface StatsCardsProps,45,,,
2025-04-11 06:01:58,src/app/(tenant)/[tenant]/work-order/[id]/page.tsx,WorkOrderModalPage,COMPONENT,export default async function WorkOrderModalPage(,5,,,
2025-04-11 06:01:58,src/app/@modal/(.)work-order/[id]/page.tsx,WorkOrderModalPage,COMPONENT,export default async function WorkOrderModalPage(,6,,,
2025-04-11 06:01:58,src/app/api/auth/[...nextauth]/route.ts,authorize,FUNCTION,async authorize(credentials),22,,,
2025-04-11 06:01:58,src/app/api/auth/[...nextauth]/route.ts,jwt,FUNCTION,async jwt(,63,,,
2025-04-11 06:01:58,src/app/api/auth/[...nextauth]/route.ts,session,FUNCTION,async session(,72,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/route.ts,GET,FUNCTION,"export async function GET(req: NextRequest,",6,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,GET,FUNCTION,"export async function GET(req: NextRequest,",7,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,start,FUNCTION,async start(controller),23,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,arrow_function,FUNCTION,const sendEvent = (data: object) =>,26,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,arrow_function,FUNCTION,const fetchUpdates = async () =>,36,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,arrow_function,FUNCTION,const updateInterval = setInterval(() =>,50,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,arrow_function,FUNCTION,const keepAliveInterval = setInterval(() =>,55,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,arrow_function,FUNCTION,return () =>,60,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,cancel,FUNCTION,cancel(),68,,,
2025-04-11 06:01:58,src/app/api/[tenant]/dashboard/events/route.ts,pull,FUNCTION,pull(controller),71,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,StatusOption,TYPE,type StatusOption =,27,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,FieldType,TYPE,type FieldType = 'text' | 'number' | 'select' | 'selectmulti' | 'date' | 'time' | 'datetime' | 'currency';,32,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,EditDialogProps,TYPE,type EditDialogProps =,34,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,EditDialog,COMPONENT,export function EditDialog(,50,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,const handleSubmit = async (e: React.FormEvent) =>,62,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,"const handleChange = (name: string, value: string | Date | string[]) =>",75,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,setFormData(prev => (,82,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,const renderField = (field:,85,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onValueChange=,97,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,,103,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onChange=,116,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onSelect=,140,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onChange=,155,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onSelect=,182,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onChange=,200,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onChange=,225,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onBlur=,229,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onChange=,251,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,,267,,,
2025-04-11 06:01:58,src/components/EditDialog.tsx,arrow_function,FUNCTION,onClick=,281,,,
2025-04-11 06:01:58,src/components/FetchStates.tsx,LoadingState,COMPONENT,export function LoadingState(),2,,,
2025-04-11 06:01:58,src/components/FetchStates.tsx,ErrorState,COMPONENT,export function ErrorState(,10,,,
2025-04-11 06:01:58,src/components/FetchStates.tsx,arrow_function,FUNCTION,onClick=,15,,,
2025-04-11 06:01:58,src/components/Footer.tsx,ModeToggle,COMPONENT,function ModeToggle(),9,,,
2025-04-11 06:01:58,src/components/Footer.tsx,arrow_function,FUNCTION,const toggleTheme = () =>,12,,,
2025-04-11 06:01:58,src/components/Footer.tsx,Footer,COMPONENT,export default function Footer(),26,,,
2025-04-11 06:01:58,src/components/ModeToggle.tsx,ModeToggle,COMPONENT,export function ModeToggle(),15,,,
2025-04-11 06:01:58,src/components/ModeToggle.tsx,arrow_function,FUNCTION,<DropdownMenuItem onClick=,28,,,
2025-04-11 06:01:58,src/components/ModeToggle.tsx,arrow_function,FUNCTION,<DropdownMenuItem onClick=,31,,,
2025-04-11 06:01:58,src/components/ModeToggle.tsx,arrow_function,FUNCTION,<DropdownMenuItem onClick=,34,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,Option,TYPE,type Option =,21,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,SelectMultiProps,INTERFACE,interface SelectMultiProps,26,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,SelectMulti,COMPONENT,export function SelectMulti(,34,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,arrow_function,FUNCTION,const handleSelect = (optionValue: string) =>,43,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,arrow_function,FUNCTION,? value.filter(v => v !== optionValue),45,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,arrow_function,FUNCTION,,73,,,
2025-04-11 06:01:58,src/components/SelectMulti.tsx,arrow_function,FUNCTION,onSelect=,76,,,
2025-04-11 06:01:58,src/components/SessionWrapper.tsx,SessionWrapperProps,INTERFACE,interface SessionWrapperProps,6,,,
2025-04-11 06:01:58,src/components/SessionWrapper.tsx,arrow_function,FUNCTION,const SessionWrapper = (,11,,,
2025-04-11 06:01:58,src/components/TenantProvider.tsx,TenantProvider,COMPONENT,export function TenantProvider(,9,,,
2025-04-11 06:01:58,src/components/TenantProvider.tsx,useTenant,HOOK,export function useTenant(),23,,,
2025-04-11 06:01:58,src/components/ThemeWrapper.tsx,ThemeProvider,COMPONENT,export function ThemeProvider(,6,,,
2025-04-11 06:01:58,src/components/modals/default.tsx,DefaultModal,COMPONENT,export default function DefaultModal(),3,,,
2025-04-11 06:01:58,src/components/modals/modal-container.tsx,ModalContainer,COMPONENT,export function ModalContainer(,7,,,
2025-04-11 06:01:58,src/components/modals/modal-container.tsx,arrow_function,FUNCTION,useEffect(() =>,17,,,
2025-04-11 06:01:58,src/components/modals/modal-container.tsx,arrow_function,FUNCTION,const handleKeyDown = (e: KeyboardEvent) =>,23,,,
2025-04-11 06:01:58,src/components/modals/modal-container.tsx,arrow_function,FUNCTION,"return () => document.removeEventListener('keydown', handleKeyDown)",31,,,
2025-04-11 06:01:58,src/components/modals/modal-container.tsx,arrow_function,FUNCTION,onClick=,38,,,
2025-04-11 06:01:58,src/components/modals/work-order-modal.tsx,WorkOrderModal,COMPONENT,export function WorkOrderModal(,8,,,
2025-04-11 06:01:58,src/components/modals/work-order-modal.tsx,arrow_function,FUNCTION,const handleClose = () =>,17,,,
2025-04-11 06:01:58,src/components/modals/work-order-modal.tsx,arrow_function,FUNCTION,<Button onClick=,33,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,fetchTenantData,FUNCTION,async function fetchTenantData(subdomain: string): Promise<TenantWithRelations>,6,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,useTenantData,HOOK,export function useTenantData(subdomain: string),12,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,arrow_function,FUNCTION,"queryFn: () => fetchTenantData(subdomain),",15,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,arrow_function,FUNCTION,select: (data: TenantWithRelations) => (,18,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,arrow_function,FUNCTION,"lowStockParts: data.parts.filter(p => p.quantity <= p.minStock),",20,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,arrow_function,FUNCTION,"activeWorkOrders: data.workOrders.filter(wo => 
        ['PENDING', 'IN_PROGRESS'].includes(wo.status)",21,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,arrow_function,FUNCTION,"activeCalls: data.incidents.filter(c => CallStatus.OPEN.includes(c.status)),",24,,,
2025-04-11 06:01:58,src/hooks/useTenantData.ts,arrow_function,FUNCTION,"assetsDown: data.assets.filter(a => !AssetStatus.OPERATIONAL.includes(a.status)),",25,,,
2025-04-11 06:01:58,src/lib/auth-utils.ts,hashPassword,FUNCTION,export async function hashPassword(password: string),3,,,
2025-04-11 06:01:58,src/lib/auth-utils.ts,verifyPassword,FUNCTION,"export async function verifyPassword(password: string, hashedPassword: string)",7,,,
2025-04-11 06:01:58,src/lib/auth.ts,getCurrentUser,FUNCTION,export async function getCurrentUser(),6,,,
2025-04-11 06:01:58,src/lib/auth.ts,requireAuth,FUNCTION,export async function requireAuth(),11,,,
2025-04-11 06:01:58,src/lib/middleware.ts,middleware,FUNCTION,export async function middleware(request: NextRequest),6,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,SessionWithUser,INTERFACE,export interface SessionWithUser extends Session,6,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,generateSecureToken,FUNCTION,function generateSecureToken(length: number): string,24,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,sessionExtension,FUNCTION,export default function sessionExtension(prisma: PrismaClient),30,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,create,FUNCTION,async create(data:,34,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,findSessionByToken,FUNCTION,async findSessionByToken(sessionToken?: string): Promise<SessionWithUser | null>,77,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,deleteSession,FUNCTION,async deleteSession(sessionToken?: string): Promise<void>,98,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,rotateSession,FUNCTION,async rotateSession(): Promise<SessionWithUser>,115,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,cleanExpiredSessions,FUNCTION,async cleanExpiredSessions(): Promise<,159,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,validateSession,FUNCTION,"async validateSession(
          sessionToken?: string
        ): Promise<",174,,,
2025-04-11 06:01:58,src/lib/prisma-extended.ts,updateSessionData,FUNCTION,"async updateSessionData(
          data: Partial<Pick<Session, 'expires'>>,
          sessionToken?: string
        ): Promise<SessionWithUser | null>",206,,,
2025-04-11 06:01:58,src/lib/tenant-cache.ts,arrow_function,FUNCTION,export const getTenantData = cache(async (subdomain: string): Promise<TenantWithRelations> =>,6,,,
2025-04-11 06:01:58,src/lib/utils.ts,cn,FUNCTION,export function cn(...inputs: ClassValue[]),4,,,
2025-04-11 06:01:58,src/lib/utils.ts,TransformedData,TYPE,"type TransformedData<T> = T extends object
  ?",9,,,
2025-04-11 06:01:58,src/lib/utils.ts,arrow_function,FUNCTION,"export const transformData = <T>(data: T): TransformedData<T> =>
  !data || typeof data !== ""object""
    ? (data as TransformedData<T>) // Cast primitive types to the return type
    : Object.fromEntr",24,,,
2025-04-11 06:01:58,src/lib/utils.ts,arrow_function,FUNCTION,"Object.entries(data).map(([key, value]) => [
          key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase()),
          typeof value === ""string"" && /\d",28,,,
2025-04-11 06:01:58,src/lib/utils.ts,arrow_function,FUNCTION,"key.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase()),",29,,,
2025-04-11 06:01:58,src/types/dashboard.ts,DashboardData,INTERFACE,export interface DashboardData,4,,,
2025-04-11 06:01:58,src/types/next-auth.d.ts,Session,INTERFACE,interface Session,5,,,
2025-04-11 06:01:58,src/types/next-auth.d.ts,User,INTERFACE,interface User,18,,,
2025-04-11 06:01:58,src/types/next-auth.d.ts,JWT,INTERFACE,interface JWT,28,,,
2025-04-11 06:01:58,src/types/tenant.ts,TenantWithRelations,TYPE,export type TenantWithRelations = Prisma.TenantGetPayload<,3,,,
